#
#	appweb.conf -- Default Configuration for the Mbedthis AppWeb HTTP Server
#	
#	This configuration file controls the operation of the AppWeb 
#	server. The order of configuration directives matters as this 
#	file is parsed only once. You must put the server root and error 
#	log definitions first to ensure configuration errors are logged.
#

#
#	Root directory for AppWeb to find necessary files and DLLs. 
#	AppWeb will change directory to this location when it runs.
#
ServerRoot "c:/Program Files/Mbedthis Appweb"

#
#	Log all AppWeb errors and trace to this file. This is the error 
#	file for the whole server including all virtual hosts. 
#
ErrorLog "c:/Program Files/Mbedthis Appweb/logs/error.log"

#
#	The log level can be a number between 0 and 9 (most verbose level).
#
LogLevel 2

#
#	Name of the server to use for redirects and error responses to the 
#	clients. Uncomment this line and replace it with the public name of your
#	server. This host name and port do not get used for listening on 
#	sockets.
#
ServerName http://localhost:7777

#
#	Location for documents for the primary server host. Virtual hosts 
#	may define their own DocumentRoot directives.
#
DocumentRoot "c:/appweb/web"

#
#	Bind AppWeb to listen for incoming requests on this address. 
#	Formats include (IP, IP:PORT, PORT). If an IP address is omitted, 
#	AppWeb will listen on all interfaces. If a port is omitted, then 
#	port 80 is used.
#
Listen 127.0.0.1:7777

#
#	This will listen for SSL requests
#
# Listen 4443

#
#	Set the thread limit to 0 for single-threaded use
#
ThreadLimit 0

#
#	Location of the mime translation file to map content types to 
#	file extensions.
#
TypesConfig mime.types

#
#	DLL / Dynamic Shared Object (DSO) support. If the modules has been 
#	statically linked into AppWeb, these directive will be ignored.
#
LoadModulePath "c:/Program Files/Mbedthis Appweb/lib/modules"
#LoadModule auth 		libauthModule
#LoadModule cgi 			libcgiModule
#LoadModule dir 			libdirModule
#LoadModule egi 			libegiModule
#LoadModule esp 			libespModule
#LoadModule dir	 		libdirModule
#LoadModule put	 		libputModule
#LoadModule copy 		libcopyModule
#LoadModule upload 		libuploadModule

#
#	If you want PHP, uncomment this
#
LoadModule php5 		libphp5Module

#
#	If you want SSL, uncomment the line below
#
# LoadModule ssl 		libsslModule

#
#	For SSL, pick one of the SSL providers below
#

# LoadModule matrixSsl 	libmatrixSslModule
# LoadModule openSsl 	libopenSslModule

#
#	This is the C API module.
#
# LoadModule capi 		libcapiModule

#
#	This is the GoAhead WebServer compatibility module
#
# LoadModule compat 	libcompatModule

#
#	The Admin module is for non-production debug use only.
#
# LoadModule admin 		libadminModule

#
#	Map handlers to file extensions. If the extension is ommitted, the 
#	handler itself will determine if a match to a given URL occurs. For
#	example: authHandler is always run on all URLs. Handler matching
#	to extensions occurs after the URL is descaped but before aliases
#	are applied.
#
# AddHandler adminHandler 
# AddHandler authHandler
# AddHandler putHandler
# AddHandler dirHandler
# AddHandler uploadHandler
# AddHandler egiHandler .egi

#
#	For Scripts, such as your Perl scripts make sure that you have 
#	"#!/PerlPath" as the first line. This works on Windows as well.
#	The .bat and .cmd extensions are really only for Windows.
#	
#AddHandler cgiHandler .cgi .cgi-nph .bat .cmd .pl .py
#AddHandler espHandler .esp .asp
#
#	Uncomment if you want PHP
#
AddHandler php5Handler .php
#AddHandler copyHandler 

#LINUX
#
#	These actions specify the program to run for each Perl or Python 
#	script. They map to the extensions specified in the mime.types for for 
#	these mime types. Alternatively, you may use put all your scripts in 
#	the subdirectories specified by the releavant Location blocks below.
#	For perl and python, you can also put "#!/path/to/program" as the first 
#	line. This works on Windows as well. The .bat and .cmd extensions are 
#	really only for Windows. For Windows, update the program paths with
#	the right paths.
#	
#Action application/x-appweb-perl /usr/bin/perl
#Action application/x-appweb-python /usr/bin/python
#LINUX

#
#	For other types, you can use AddType or edit mime.types
#
#	AddType application/x-appweb-other other

#
#	Apply handlers to given URL prefixes. I.e. this will run the Esp
#	handler for all URLs that begin with "/esp".
#
#<Location /esp/>
#	SetHandler espHandler
#</Location>
#
#<Location /egi/>
#	SetHandler egiHandler
#	ExtraPath on
#</Location>

#
#	Just for compatibility with the GoAhead WebServer
#
#<Location /goform/>
#	SetHandler egiHandler
#	ExtraPath on
#</Location>

#
#	This will allow the upload handler to service requests that have /upload/ 
#	as the start of their URL
#
#<Location /upload/>
#	AddHandler uploadHandler
#	FileUploadDir /tmp
#</Location>

#ScriptAlias /cgi-bin/ "$DOCUMENT_ROOT/cgi-bin"

#
#	Delete this section if you don't want the documentation visible
#
Alias /doc/ "c:/Program Files/Mbedthis Appweb/doc/"
#<Location /doc/>
#	AddHandler copyHandler 
#</Location>

# <Location /admin/>
# 	SetHandler adminHandler
# </Location>

#
#	Define an error document
#
# 	ErrorDocument 404 /notFound.html

#
#	Directory listings
#
#Options Indexes
#IndexOrder ascending name
#IndexOptions FancyIndexing FoldersFirst
# IndexOptions HTMLTable
 
#
#	Define the log format for the access log.
#
CustomLog c:/Program Files/Mbedthis Appweb/logs/access.log "%h %l %u %t \"%r\" %>s %b"

#
#	Send ESP errors to the user's browser. Change to "log" for production
#	systems.
#
# EspErrors log

#
#	Turn HTTP/1.1 chunked transfers off
#
# HttpChunking off

#
# 	Define persisten connections where one TCP/IP connection may serve
#	multiple HTTP requests. (A definite performance boost)
#
KeepAlive on

#
#	Number of seconds to wait for the next HTTP request before closing 
#	the TCP/IP connection.
#
KeepAliveTimeout 60

#
#	Number of HTTP requests to accept on a single TCP/IP connection
#
MaxKeepAliveRequests 2000

#
#	Default session timeout (30 mins in seconds)
#
SessionTimeout 1800

#
#	Auto create sessions for ESP
#
# SessionAutoCreate on

#
#	Send and receive inactivity timeout to close a TCP/IP connection
#
Timeout 60

#
#	Enable Trace method support
#
# TraceMethod on

#
#	The user name and group to switch to once AppWeb has started.
#
Group Administrators
User Administrator

#
#	Default directory index to serve when a directory (URL ends in "/")
#	 is requested.
#
DirectoryIndex index.html

#
#	Performance and Security Limits. NOTE: these are set here very large.
#
LimitResponseBody 16777216	
LimitScriptSize  131072	
LimitRequestBody 4194304
LimitRequestFields 512	
LimitRequestFieldSize 1048576
LimitRequestLine 65536
LimitUrl 60000
SendBufferSize 8192

#
#	Pre-allocate this number of threads
#
# 	StartThreads 4

#
#	Specify the thread stack size
#
#	ThreadStackSize 65536

#
#	Uncomment this section if you want to use SSL. Also load the ssl module
#		and either matrixSSL or OpenSSL 
#
#	This virtual host will process SSL requests
#
#	<VirtualHost *:4443>
#		DocumentRoot "/var/www/appweb-default"
#		SSLEngine on
#		SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL
#		SSLProtocol ALL -SSLV2
#	
#		#
#		#	WARNING: you must regenerate the server.crt and server.key.pem
#		#
#		SSLCertificateFile "$SERVER_ROOT/server.crt"
#	
#		#
#		#	WARNING: we are using the decrypted key here so it won't prompt for the
#		#	password. Replace with server.key for higher security
#		#
#		SSLCertificateKeyFile "$SERVER_ROOT/server.key.pem"
#	
#		# Add these directives to verify client certificates
#		#SSLVerifyClient require
#		#SSLCACertificateFile "$SERVER_ROOT/ca.crt"
#		#SSLCACertificatePath "$SERVER_ROOT/certs"
#		Alias /doc/ "c:/Program Files/Mbedthis Appweb/doc/"
#	</VirtualHost>                                  

#
#	Other useful directives. See the documentation for details.
#		Alias /esp/ "$DOCUMENT_ROOT/"
#		Alias /SimpleAlias/ "$DOCUMENT_ROOT/"
#		Alias /AliasForMyDocuments/ "$DOCUMENT_ROOT/My Documents/"
#		
#		Redirect temp /pressRelease.html /fixedPressRelease.html
#		Redirect permanent /acme.html http://www.coyote.com/acme.html
#		Redirect 410 /membersOnly 
#	Authorization directives for basic or digest authentication
#		AuthGroupFile groups.db
#		AuthUserFile users.db
#		AuthDigestQop auth
#		<Directory $DOCUMENT_ROOT/basic/acme>
#			AuthType basic
#			AuthName "Acme Inc"
#			Require valid-user
#		</Directory>
#		<Directory $DOCUMENT_ROOT/digest/acme>
#			AuthType digest
#			AuthName "Acme Inc"
#			Require valid-user
#		</Directory>
#
#
#	Virtual Host directives supporting both Named and IP virtual hosts
#	Note: you can nest Directory and Location directives inside 
#	VirtuaHost directives. To use these, you will need to add the 
#	relevant Listen directives. E.g. (Listen 5556).
#
#		NameVirtualHost *:5556
#		<VirtualHost *:5556>
#			ServerName		www.myHost.com
#			DocumentRoot	"$SERVER_ROOT/myHost"
#			ScriptAlias 	"/cgi-bin/" "$SERVER_ROOT/web/cgi-bin/"
#		</VirtualHost>
#		
#		<VirtualHost *:5556>
#			ServerName		www.yourHost.com
#			DocumentRoot	"$SERVER_ROOT/yourHost"
#			ResetHandlers
#			AddHandler espHandler .myEsp
#			AddHandler egiHandler
#			DirectoryIndex index.myEsp
#			<Location /myEgi>
#				SetHandler egiHandler
#				ExtraPath on
#			</Location>
#		</VirtualHost>
#		
#		#
#		#	This virtual host will process all requests on port 5557
#		#
#		<VirtualHost *:5557>
#			DocumentRoot	"$SERVER_ROOT/vhostWeb/acme"
#			<Directory $DOCUMENT_ROOT/protected>
#				AuthType basic
#				AuthName "Acme Inc"
#				Require user mary
#			</Directory>
#		</VirtualHost>
